#include <DHT.h>
#include <DHT_U.h>
#include <Wire.h>
#include <BMx280I2C.h>

// Definimos el pin digital donde se conecta el sensor DHT11
#define DHTPIN 13
// Dependiendo del tipo de sensor
#define DHTTYPE DHT11
// Se define el sensor para el sensor DHT11
DHT dht(DHTPIN, DHTTYPE);

float t1;
float h1;

//Definir el BME280
#define I2C_ADDRESS 0x77 //direcci√≥n I2C
//create a BMx280I2C object using the I2C interface with I2C Address 0x76
BMx280I2C bmx280(I2C_ADDRESS);
float t_BME,p_BME,h_BME;


void setup() {
  // put your setup code here, to run once:
  Serial.begin(115200);
  Serial.println("Test de sensores");

  //Se inicia el DHT11
  dht.begin();

  //Se inicia el sensor BME280
  Wire.begin();

  //begin() checks the Interface, reads the sensor ID (to differentiate between BMP280 and BME280)
  //and reads compensation parameters.
  if (!bmx280.begin())
  {
    Serial.println("begin() failed. check your BMx280 Interface and I2C Address.");
    while (1);
  }

  if (bmx280.isBME280())
    Serial.println("sensor is a BME280");
  else
    Serial.println("sensor is a BMP280");

  //reset sensor to default parameters.
  bmx280.resetToDefaults();
  //by default sensing is disabled and must be enabled by setting a non-zero
  //oversampling setting.
  //set an oversampling setting for pressure and temperature measurements. 
  bmx280.writeOversamplingPressure(BMx280MI::OSRS_P_x16);
  bmx280.writeOversamplingTemperature(BMx280MI::OSRS_T_x16);

  //if sensor is a BME280, set an oversampling setting for humidity measurements.
  if (bmx280.isBME280())
    bmx280.writeOversamplingHumidity(BMx280MI::OSRS_H_x16);
  delay(500);
}

void loop() {
  // put your main code here, to run repeatedly:
  delay(500);  
  leerdht();
  leerBME();
  Serial.print("Temp: ");
  Serial.print(t1);
  Serial.print(" Hum: ");
  Serial.print(h1);
  Serial.print(" T_BME: ");
  Serial.print(t_BME);
  Serial.print(" H_BME: ");
  Serial.print(h_BME);
  Serial.print(" p_BME: ");
  Serial.print(p_BME);
  Serial.println(' ');
}

void leerdht() {

  t1 = dht.readTemperature();
  h1 = dht.readHumidity();

  while (isnan(t1) || isnan(h1)){
    Serial.println("Lectura fallida en el sensor DHT11....esperando");
    delay(500);
  }
} 
 void leerBME() {
 
  if (!bmx280.measure())
  {
    Serial.println("could not start measurement, is a measurement already running?");
    return;
  }

  //wait for the measurement to finish
  do
  {
    delay(100);
  } while (!bmx280.hasValue());

  p_BME = bmx280.getPressure();
  t_BME = bmx280.getTemperature();

  if (bmx280.isBME280())
  {
    h_BME = bmx280.getHumidity();
  }
  }
 
